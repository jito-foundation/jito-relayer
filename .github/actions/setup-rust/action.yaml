name: Setup Rust
description: Installs rust in a bare metal fashion
inputs:
  caller-workflow-name:
    description: 'Name of workflow used for creating a cache key in ASCII format.'
    required: true
    default: ''

runs:
  using: composite
  steps:
    - name: Generate cache key
      id: cache-key-generator
      run: echo "cache-key=$(echo ${{inputs.caller-workflow-name}} | tr ' ' '_')" >> $GITHUB_OUTPUT
      shell: bash

    - name: Check cache key
      run: "echo Cache key: ${{ steps.cache-key-generator.outputs.cache-key }}"
      shell: bash

    - name: Install Protobuf
      run: |
        export PROTOC_VERSION=21.12 && \
        export PROTOC_ZIP=protoc-$PROTOC_VERSION-linux-x86_64.zip && \
        curl -Ss -OL https://github.com/google/protobuf/releases/download/v$PROTOC_VERSION/$PROTOC_ZIP \
        && sudo unzip -o $PROTOC_ZIP -d /usr/local bin/protoc \
        && sudo unzip -o $PROTOC_ZIP -d /usr/local include/* \
        && rm -f $PROTOC_ZIP
      shell: bash

    - name: cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo
        key: ${{ runner.os }}-cargo-${{ steps.cache-key-generator.outputs.cache-key }}-${{ hashFiles('**/Cargo.lock') }}

    - name: cache rust files
      uses: actions/cache@v3
      with:
        path: |
          target/
        key: ${{ runner.os }}-cargo-${{ steps.cache-key-generator.outputs.cache-key }}-${{ hashFiles('**/*.rs') }}

    - name: Check rust version before
      run: |
        rustc --version || true;
        cargo --version || true;
        cargo clippy --version || true;
        cargo fmt --version || true;
      shell: bash

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
        components: clippy, rustfmt

    - name: Check rust version after
      run: |
        rustc --version;
        cargo --version;
        cargo clippy --version;
        cargo fmt --version;
      shell: bash
